plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.traveltest'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(23)
	}
}

repositories {
	mavenCentral()
}
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// Jakarta Persistence & Validation
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

	// Jakarta Persistence & Validation
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	implementation 'jakarta.transaction:jakarta.transaction-api:2.0.1' 

	// Hibernate ORM
	implementation 'org.hibernate:hibernate-core:6.6.8.Final'
	implementation 'org.hibernate.validator:hibernate-validator'

	// Lombok
	compileOnly 'org.projectlombok:lombok:1.18.38'
	annotationProcessor 'org.projectlombok:lombok:1.18.38'

	// MySQL Driver
	runtimeOnly 'com.mysql:mysql-connector-j:8.3.0'

	// JWT (Authentication & Authorization)
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
	implementation 'com.nimbusds:nimbus-jose-jwt:9.10'

	// OpenAPI (Swagger UI)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'

	// Servlet API (Chỉ dùng khi cần)
	implementation 'javax.servlet:javax.servlet-api:4.0.1'

	//Mapper
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'com.nimbusds:nimbus-jose-jwt:9.1.1'  // Thêm dòng này nếu chưa có
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	implementation 'org.springframework.boot:spring-boot-starter-websocket'

}

tasks.named('test') {
	useJUnitPlatform()
}
tasks.withType(JavaCompile).configureEach {
	options.compilerArgs += ["--add-exports=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED"]
	options.compilerArgs += ["--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED"]
	options.compilerArgs += ["--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED"]
}

